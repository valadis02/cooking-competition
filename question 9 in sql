CREATE TABLE average_carbon (
    id INT AUTO_INCREMENT PRIMARY KEY,
    year_id INT,
    average_carbon DECIMAL(10, 2)
);

DELIMITER //

CREATE TRIGGER update_average_carbon_trigger 
AFTER INSERT ON selected_recipes 
FOR EACH ROW 
BEGIN
    DECLARE carbs DECIMAL(10, 2);

    -- Get the carbohydrates_per_serving for the new recipe
    SELECT ni.carbohydrates_per_serving
    INTO carbs
    FROM nutritionalinfo ni
    WHERE ni.recipe_name = NEW.recipe_name;

    -- Insert the carbohydrates_per_serving into the average_carbon table
    INSERT INTO average_carbon (year_id, average_carbon)
    VALUES (NEW.year, carbs);
END;
//

DELIMITER ;


CREATE TABLE average2_carbon (
    id INT AUTO_INCREMENT PRIMARY KEY,
    average_carbon DECIMAL(10, 2)
);



ALTER TABLE average2_carbon ADD COLUMN year_id INT;

DELIMITER //

CREATE TRIGGER update_average2_carbon_trigger AFTER INSERT ON average_carbon
FOR EACH ROW
BEGIN
    DECLARE total_carbon DECIMAL(10, 2);
    DECLARE current_count INT;
    DECLARE new_year INT;

    -- Get the current count of rows in the average_carbon table
    SELECT COUNT(*) INTO current_count FROM average_carbon;
    
    -- If the current count is a multiple of 100, sum all values in the average_carbon table
    IF current_count % 100 = 0 THEN
        -- Calculate the total carbon by summing all values in the average_carbon table
        SELECT SUM(average_carbon)
        INTO total_carbon
        FROM average_carbon;
        
        -- Calculate the average carbon by dividing the total carbon by the number of rows
        SET total_carbon = total_carbon / current_count;
        
        -- Insert the new average carbon value into the average2_carbon table
        INSERT INTO average2_carbon (average_carbon, year_id)
        VALUES (total_carbon, 2000 + current_count / 100);
    END IF;
END;
//

DELIMITER ;

