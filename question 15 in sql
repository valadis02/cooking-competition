CREATE TABLE SelectedFoodGroups (
    id INT PRIMARY KEY AUTO_INCREMENT,
    recipe_name VARCHAR(255),
    food_group_id INT,
    FOREIGN KEY (food_group_id) REFERENCES FoodGroups(food_group_id)
);

-- Create the FoodGroupAssociations table
CREATE TABLE FoodGroupAssociations (
    association_id INT AUTO_INCREMENT PRIMARY KEY,
    food_group_id INT,
    ingredient_id INT,
    FOREIGN KEY (food_group_id) REFERENCES FoodGroups(food_group_id),
    FOREIGN KEY (ingredient_id) REFERENCES Ingredients(ingredient_id)
);

-- Insert sample data into FoodGroups
INSERT INTO FoodGroups (name, description) VALUES 
('Fruits', 'All types of fruits'),
('Vegetables', 'All types of vegetables'),
('Grains', 'Cereals and grains'),
('Proteins', 'Meat, fish, and legumes'),
('Dairy', 'Milk and dairy products');

-- Insert sample data into FoodGroupAssociations
INSERT INTO FoodGroupAssociations (food_group_id, ingredient_id) VALUES 
(1, 1), -- Fruits and Apple
(1, 2), -- Fruits and Banana
(2, 3), -- Vegetables and Carrot
(2, 4), -- Vegetables and Broccoli
(3, 7), -- Grains and Rice
(3, 8), -- Grains and Wheat
(4, 5), -- Proteins and Chicken
(4, 6), -- Proteins and Salmon
(4, 11), -- Proteins and Lentils
(4, 12), -- Proteins and Eggs
(4, 13), -- Proteins and Beef
(5, 9), -- Dairy and Milk
(5, 10), -- Dairy and Cheese
(2, 14), -- Vegetables and Spinach
(4, 15); -- Proteins and Almonds

CREATE TRIGGER insert_food_groups_after_recipe
AFTER INSERT ON selected_recipes
FOR EACH ROW
BEGIN
    -- Insert associated food groups into SelectedFoodGroups
    INSERT INTO SelectedFoodGroups (recipe_name, food_group_id)
    SELECT NEW.recipe_name, fga.food_group_id
    FROM Recipe_Ingredients ri
    JOIN Ingredients i ON ri.ingredient_id = i.ingredient_id
    JOIN FoodGroupAssociations fga ON i.ingredient_id = fga.ingredient_id
    JOIN Recipes r ON ri.recipe_id = r.recipe_id
    WHERE r.recipe_name = NEW.recipe_name;
END//

DELIMITER ;

-- Create FoundFoodGroups table
CREATE TABLE FoundFoodGroups (
    food_group_id INT PRIMARY KEY,
    name VARCHAR(255),
    description TEXT,
    count INT DEFAULT 0,
    FOREIGN KEY (food_group_id) REFERENCES FoodGroups(food_group_id)
);

-- Initialize FoundFoodGroups with all food groups set to count 0
INSERT INTO FoundFoodGroups (food_group_id, name, description, count)
SELECT fg.food_group_id, fg.name, fg.description, 0
FROM FoodGroups fg
ON DUPLICATE KEY UPDATE count = count;

-- Create the trigger to update FoundFoodGroups after inserting a recipe into SelectedRecipes
DELIMITER //

CREATE TRIGGER update_found_food_groups
AFTER INSERT ON Selected_Recipes
FOR EACH ROW
BEGIN
    -- Update the count of the food groups in FoundFoodGroups
    UPDATE FoundFoodGroups ff
    JOIN (
        SELECT fga.food_group_id
        FROM FoodGroupAssociations fga
        JOIN Recipes r ON fga.recipe_name = r.recipe_name
        WHERE r.recipe_name = NEW.recipe_name
    ) AS temp ON ff.food_group_id = temp.food_group_id
    SET ff.count = ff.count + 1;
END//

DELIMITER ;
